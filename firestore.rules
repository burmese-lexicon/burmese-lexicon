service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    
    function isAdmin() {
    	return isLoggedIn()
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.hasAny(['admin']);
    }
    
    function isLoggedIn() {
    	return request.auth.uid != null
    }
 
    match /words/{word} {
    	allow create: if isAdmin()
      	|| (isLoggedIn()
          && request.resource.id is string && request.resource.id.matches("^[\u1000-\u109F]{1,30}$")
          && request.resource.data.user == request.auth.uid
          && request.resource.data.createdAt is int
          && request.resource.data.size() == 2
          && !exists(/databases/$(database)/documents/words/$(request.resource.id))
      	)
      allow list: if true
    }
    
    match /definitions/{definition} {
    	allow create: if isAdmin()
      	|| (isLoggedIn()
          && request.resource.data.definition.matches("^[.]{2, 1000}$")
          && request.resource.data.user == request.auth.uid
          && request.resource.data.createdAt is int
          && request.resource.data.size() == 4
          && exists(/databases/$(database)/documents/words/$(request.resource.data.word))
      	)
      allow list: if true
    }
  }
}
